# Global Cache settings
proxy_cache_path /var/flutter/cache levels=2:2 keys_zone=flutter:500m inactive=30d max_size=16g min_free=5g loader_files=1000 loader_sleep=50ms loader_threshold=300ms use_temp_path=off;

# Log with cache status
log_format cachelog '$remote_addr [$time_local] "$request" $status "$http_user_agent" "$upstream_cache_status"';

# URI paths to avoid cache
# These paths will change to indicate new release contents
# All other .deb files can be cached nearly indefinitely, as the
# version number is coded into the file name.
map $request_uri $nocache {
    ~releases_linux.json 1;
    ~releases_macos.json 1;
    ~releases_windows.json 1;
}

# Flutter SDK Release Cache Server
server {
    listen 80 reuseport;
    access_log /var/log/nginx/access.log cachelog;
    error_log /var/log/nginx/error.log;

    # Cache Location
    slice 1m;
    proxy_cache flutter;
    proxy_cache_key $http_host$uri$slice_range;
    proxy_cache_valid 200 206 3650d;
    proxy_cache_valid 301 302 0;
    proxy_set_header Range $slice_range;
    proxy_cache_lock on;
    proxy_cache_lock_age 2m;
    proxy_cache_lock_timeout 1h;
    proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
    proxy_cache_revalidate on;

    #Nocache for those entries
    proxy_no_cache $nocache;
    proxy_cache_bypass $nocache;
    proxy_max_temp_file_size 1024m;

    # Cache status
    add_header X-Cache-Status $upstream_cache_status;
    proxy_ignore_headers Expires Cache-Control;
    proxy_ignore_client_abort on;

    # Upstream Configuration
    proxy_next_upstream error timeout http_404;
    proxy_redirect off;
    proxy_ssl_server_name on;

    # Redirect to the Flutter SDK Release Index
    location /releases/ {
        proxy_pass https://storage.googleapis.com/flutter_infra_release/releases/;
        proxy_set_header Host "storage.googleapis.com";
    }

    # Stats endpoint
    location = /-/status {
        stub_status;
    }

    # Static Files (conversion scripts)
    root /var/www/public/;
    autoindex on;
}
